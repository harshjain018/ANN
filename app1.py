# -*- coding: utf-8 -*-
"""app1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16S4qVBcycrwvCu59P9ycqrQJGkreK_Z0
"""

import streamlit as st
import numpy as np
import pandas as pd
import tensorflow as tf
import requests
from io import StringIO
from sklearn.preprocessing import StandardScaler

# Replace with your actual file ID
file_id = '1uy-mxgp4qqeUxOlzJWJLQsi4Le8qD61a'

# Construct the URL for direct download (using export)
url = f'https://drive.google.com/uc?export=download&id={file_id}'

# Fetch the data using requests
response = requests.get(url)
response.raise_for_status()  # Raise an exception for bad responses

# Read the data into a pandas DataFrame using StringIO
hj1618_df = pd.read_csv(StringIO(response.text), encoding='utf-8')

# Fill missing values
hj1618_df['CREDIT_LIMIT'].fillna(hj1618_df['CREDIT_LIMIT'].median(), inplace=True)
hj1618_df['MINIMUM_PAYMENTS'].fillna(hj1618_df['MINIMUM_PAYMENTS'].median(), inplace=True)

# Drop non-relevant columns
hj1618_df.drop(columns=['CUST_ID'], errors='ignore', inplace=True)

# Feature scaling
scaler = StandardScaler()
hj1618_df_scaled = scaler.fit(hj1618_df.drop(columns=['PURCHASES'], errors='ignore'))

# Load the trained model
model = tf.keras.models.load_model("best_model.h5")

# Streamlit UI
st.title("Customer Spending Analysis Dashboard")
st.write("Predict whether a customer is a High or Low Spender using an ANN model.")

# User input fields
features = {}
for col in hj1618_df.columns:
    if col != 'PURCHASES':  # Exclude target variable
        features[col] = st.number_input(f"Enter {col}", value=float(hj1618_df[col].median()))

# Prediction Button
if st.button("Predict Spending Category"):
    user_data = np.array([list(features.values())]).reshape(1, -1)
    user_data_scaled = scaler.transform(user_data)
    prediction = model.predict(user_data_scaled)
    category = "High Spender" if prediction[0][0] > 0.5 else "Low Spender"

    st.subheader("Prediction Result:")
    st.write(f"The customer is predicted to be a **{category}**.")

